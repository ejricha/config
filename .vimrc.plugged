" .vimrc.plugged
"
" Manage plugins using 'junegunn/vim-plug'

" BEGIN
call plug#begin('~/.vim/plugged')
Plug 'ChaiScript/vim-chaiscript'
Plug 'ChaiScript/vim-cpp'
Plug 'Mizuchi/STL-Syntax'
Plug 'NLKNguyen/papercolor-theme'
Plug 'airblade/vim-gitgutter'
Plug 'airblade/vim-gitgutter' " shows git changes
"Plug 'altercation/vim-colors-solarized'
Plug 'arecarn/crunch'
Plug 'janko-m/vim-test' " Run tests
Plug 'junegunn/fzf' " Fuzzy finding
Plug 'kien/rainbow_parentheses.vim'
Plug 'mhinz/vim-grepper' " Grepper
Plug 'morhetz/gruvbox'
Plug 'pboettch/vim-cmake-syntax'
Plug 'plasticboy/vim-markdown'
Plug 'rdnetto/YCM-Generator', { 'branch': 'stable'}
Plug 'sbdchd/neoformat'
Plug 'scrooloose/nerdcommenter'
Plug 'sjl/gundo.git'
Plug 'spolu/dwm.git'
Plug 'terryma/vim-multiple-cursors'
Plug 'tpope/vim-dispatch'
Plug 'tpope/vim-fugitive' " plugin on GitHub rep
Plug 'tpope/vim-liquid'
Plug 'tpope/vim-projectionist'
"Plug 'tpope/vim-scriptease', {'type': 'opt'}
Plug 'tpope/vim-unimpaired'
Plug 'vim-airline/vim-airline'
Plug 'w0rp/ale' " Linting
Plug 'ycm-core/YouCompleteMe' " smart auto-completion
call plug#end()
" END

" Required
filetype plugin indent on  " indent is optional

" vim-gitgutter
let g:gitgutter_enabled = 1 " enabled by default
autocmd BufWritePost * GitGutter
command! GG GitGutterBufferToggle
command! GH GitGutterLineHighlightsToggle

" YCM plugin
let g:ycm_use_clangd = 0 " Use libclang by default, not clangd
hi Pmenu ctermfg=black ctermbg=cyan

" ALE plugins
"let g:ale_enabled = 0
" Plugins need to be added to runtimepath before helptags can be generated.
"packloadall
" Load all of the helptags now, after plugins have been loaded.
" All messages and errors will be ignored.
"silent! helptags ALL
" Shortcuts
"nmap <silent> <C-k> <Plug>(ale_previous_wrap)
"nmap <silent> <C-j> <Plug>(ale_next_wrap)

" Rainbow parentheses
command! RB RainbowParenthesesToggle
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces
